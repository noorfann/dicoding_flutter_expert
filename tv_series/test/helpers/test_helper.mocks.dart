// Mocks generated by Mockito 5.4.4 from annotations
// in ditonton/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i10;
import 'dart:convert' as _i38;
import 'dart:io' as _i7;
import 'dart:typed_data' as _i39;

import 'package:core/core.dart' as _i11;
import 'package:dartz/dartz.dart' as _i2;
import 'package:core/common/watch_category_enum.dart' as _i18;
import 'package:core/data/datasources/db/database_helper.dart' as _i16;
import 'package:core/data/datasources/movie/movie_remote_data_source.dart'
    as _i14;
import 'package:core/data/datasources/tv_series/tv_series_remote_data_source.dart'
    as _i21;
import 'package:core/data/datasources/watchlist_local_data_source.dart' as _i24;
import 'package:core/data/models/movie/movie_detail_model.dart' as _i3;
import 'package:core/data/models/movie/movie_model.dart' as _i15;
import 'package:core/data/models/tv_series/tv_series_detail_model.dart' as _i4;
import 'package:core/data/models/tv_series/tv_series_model.dart' as _i22;
import 'package:core/data/models/watchlist_table.dart' as _i25;
import 'package:core/domain/entities/movie/movie.dart' as _i12;
import 'package:core/domain/entities/movie/movie_detail.dart' as _i13;
import 'package:core/domain/entities/tv_series/tv_series.dart' as _i19;
import 'package:core/domain/entities/tv_series/tv_series_detail.dart' as _i20;
import 'package:core/domain/repositories/movie_repository.dart' as _i5;
import 'package:core/domain/repositories/tv_series_repository.dart' as _i6;
import 'package:core/domain/repositories/watchlist_repository.dart' as _i23;
import 'package:core/domain/usecases/movies/get_movie_detail.dart' as _i31;
import 'package:core/domain/usecases/movies/get_now_playing_movies.dart'
    as _i27;
import 'package:core/domain/usecases/movies/get_popular_movies.dart' as _i28;
import 'package:core/domain/usecases/movies/get_top_rated_movies.dart' as _i29;
import 'package:core/domain/usecases/movies/search_movies.dart' as _i30;
import 'package:core/domain/usecases/tv_series/get_now_playing_tv_series.dart'
    as _i32;
import 'package:core/domain/usecases/tv_series/get_popular_tv_series.dart'
    as _i33;
import 'package:core/domain/usecases/tv_series/get_top_rated_tv_series.dart'
    as _i34;
import 'package:core/domain/usecases/tv_series/get_tv_series_detail.dart'
    as _i36;
import 'package:core/domain/usecases/tv_series/search_tv_series.dart' as _i35;
import 'package:http/io_client.dart' as _i8;
import 'package:http/src/base_request.dart' as _i37;
import 'package:http/src/response.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i26;
import 'package:sqflite/sqflite.dart' as _i17;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMovieDetailResponse_1 extends _i1.SmartFake
    implements _i3.MovieDetailResponse {
  _FakeMovieDetailResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTvSeriesDetailResponse_2 extends _i1.SmartFake
    implements _i4.TvSeriesDetailResponse {
  _FakeTvSeriesDetailResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMovieRepository_3 extends _i1.SmartFake
    implements _i5.MovieRepository {
  _FakeMovieRepository_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTVSeriesRepository_4 extends _i1.SmartFake
    implements _i6.TVSeriesRepository {
  _FakeTVSeriesRepository_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDuration_5 extends _i1.SmartFake implements Duration {
  _FakeDuration_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpClientRequest_6 extends _i1.SmartFake
    implements _i7.HttpClientRequest {
  _FakeHttpClientRequest_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIOStreamedResponse_7 extends _i1.SmartFake
    implements _i8.IOStreamedResponse {
  _FakeIOStreamedResponse_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_8 extends _i1.SmartFake implements _i9.Response {
  _FakeResponse_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MovieRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRepository extends _i1.Mock implements _i5.MovieRepository {
  MockMovieRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i12.Movie>>>
      getNowPlayingMovies() => (super.noSuchMethod(
            Invocation.method(
              #getNowPlayingMovies,
              [],
            ),
            returnValue:
                _i10.Future<_i2.Either<_i11.Failure, List<_i12.Movie>>>.value(
                    _FakeEither_0<_i11.Failure, List<_i12.Movie>>(
              this,
              Invocation.method(
                #getNowPlayingMovies,
                [],
              ),
            )),
          ) as _i10.Future<_i2.Either<_i11.Failure, List<_i12.Movie>>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i12.Movie>>> getPopularMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularMovies,
          [],
        ),
        returnValue:
            _i10.Future<_i2.Either<_i11.Failure, List<_i12.Movie>>>.value(
                _FakeEither_0<_i11.Failure, List<_i12.Movie>>(
          this,
          Invocation.method(
            #getPopularMovies,
            [],
          ),
        )),
      ) as _i10.Future<_i2.Either<_i11.Failure, List<_i12.Movie>>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i12.Movie>>> getTopRatedMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopRatedMovies,
          [],
        ),
        returnValue:
            _i10.Future<_i2.Either<_i11.Failure, List<_i12.Movie>>>.value(
                _FakeEither_0<_i11.Failure, List<_i12.Movie>>(
          this,
          Invocation.method(
            #getTopRatedMovies,
            [],
          ),
        )),
      ) as _i10.Future<_i2.Either<_i11.Failure, List<_i12.Movie>>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, _i13.MovieDetail>> getMovieDetail(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieDetail,
          [id],
        ),
        returnValue:
            _i10.Future<_i2.Either<_i11.Failure, _i13.MovieDetail>>.value(
                _FakeEither_0<_i11.Failure, _i13.MovieDetail>(
          this,
          Invocation.method(
            #getMovieDetail,
            [id],
          ),
        )),
      ) as _i10.Future<_i2.Either<_i11.Failure, _i13.MovieDetail>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i12.Movie>>>
      getMovieRecommendations(int? id) => (super.noSuchMethod(
            Invocation.method(
              #getMovieRecommendations,
              [id],
            ),
            returnValue:
                _i10.Future<_i2.Either<_i11.Failure, List<_i12.Movie>>>.value(
                    _FakeEither_0<_i11.Failure, List<_i12.Movie>>(
              this,
              Invocation.method(
                #getMovieRecommendations,
                [id],
              ),
            )),
          ) as _i10.Future<_i2.Either<_i11.Failure, List<_i12.Movie>>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i12.Movie>>> searchMovies(
          String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchMovies,
          [query],
        ),
        returnValue:
            _i10.Future<_i2.Either<_i11.Failure, List<_i12.Movie>>>.value(
                _FakeEither_0<_i11.Failure, List<_i12.Movie>>(
          this,
          Invocation.method(
            #searchMovies,
            [query],
          ),
        )),
      ) as _i10.Future<_i2.Either<_i11.Failure, List<_i12.Movie>>>);
}

/// A class which mocks [MovieRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRemoteDataSource extends _i1.Mock
    implements _i14.MovieRemoteDataSource {
  MockMovieRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<List<_i15.MovieModel>> getNowPlayingMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getNowPlayingMovies,
          [],
        ),
        returnValue:
            _i10.Future<List<_i15.MovieModel>>.value(<_i15.MovieModel>[]),
      ) as _i10.Future<List<_i15.MovieModel>>);

  @override
  _i10.Future<List<_i15.MovieModel>> getPopularMovies() => (super.noSuchMethod(
        Invocation.method(
          #getPopularMovies,
          [],
        ),
        returnValue:
            _i10.Future<List<_i15.MovieModel>>.value(<_i15.MovieModel>[]),
      ) as _i10.Future<List<_i15.MovieModel>>);

  @override
  _i10.Future<List<_i15.MovieModel>> getTopRatedMovies() => (super.noSuchMethod(
        Invocation.method(
          #getTopRatedMovies,
          [],
        ),
        returnValue:
            _i10.Future<List<_i15.MovieModel>>.value(<_i15.MovieModel>[]),
      ) as _i10.Future<List<_i15.MovieModel>>);

  @override
  _i10.Future<_i3.MovieDetailResponse> getMovieDetail(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieDetail,
          [id],
        ),
        returnValue: _i10.Future<_i3.MovieDetailResponse>.value(
            _FakeMovieDetailResponse_1(
          this,
          Invocation.method(
            #getMovieDetail,
            [id],
          ),
        )),
      ) as _i10.Future<_i3.MovieDetailResponse>);

  @override
  _i10.Future<List<_i15.MovieModel>> getMovieRecommendations(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieRecommendations,
          [id],
        ),
        returnValue:
            _i10.Future<List<_i15.MovieModel>>.value(<_i15.MovieModel>[]),
      ) as _i10.Future<List<_i15.MovieModel>>);

  @override
  _i10.Future<List<_i15.MovieModel>> searchMovies(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchMovies,
          [query],
        ),
        returnValue:
            _i10.Future<List<_i15.MovieModel>>.value(<_i15.MovieModel>[]),
      ) as _i10.Future<List<_i15.MovieModel>>);
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i16.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<_i17.Database?> get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _i10.Future<_i17.Database?>.value(),
      ) as _i10.Future<_i17.Database?>);

  @override
  _i10.Future<int> insertWatchlist(Map<String, dynamic>? watchlist) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWatchlist,
          [watchlist],
        ),
        returnValue: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);

  @override
  _i10.Future<int> removeWatchlist({
    required int? id,
    required _i18.WatchCategory? category,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [],
          {
            #id: id,
            #category: category,
          },
        ),
        returnValue: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);

  @override
  _i10.Future<Map<String, dynamic>?> getWatchlistById({
    required int? id,
    required _i18.WatchCategory? category,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistById,
          [],
          {
            #id: id,
            #category: category,
          },
        ),
        returnValue: _i10.Future<Map<String, dynamic>?>.value(),
      ) as _i10.Future<Map<String, dynamic>?>);

  @override
  _i10.Future<List<Map<String, dynamic>>> getWatchlist(
          _i18.WatchCategory? category) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlist,
          [category],
        ),
        returnValue: _i10.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i10.Future<List<Map<String, dynamic>>>);
}

/// A class which mocks [TVSeriesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTVSeriesRepository extends _i1.Mock
    implements _i6.TVSeriesRepository {
  MockTVSeriesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i19.TVSeries>>>
      getAiringTodayTVSeries() => (super.noSuchMethod(
            Invocation.method(
              #getAiringTodayTVSeries,
              [],
            ),
            returnValue: _i10
                .Future<_i2.Either<_i11.Failure, List<_i19.TVSeries>>>.value(
                _FakeEither_0<_i11.Failure, List<_i19.TVSeries>>(
              this,
              Invocation.method(
                #getAiringTodayTVSeries,
                [],
              ),
            )),
          ) as _i10.Future<_i2.Either<_i11.Failure, List<_i19.TVSeries>>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i19.TVSeries>>>
      getPopularTVSeries() => (super.noSuchMethod(
            Invocation.method(
              #getPopularTVSeries,
              [],
            ),
            returnValue: _i10
                .Future<_i2.Either<_i11.Failure, List<_i19.TVSeries>>>.value(
                _FakeEither_0<_i11.Failure, List<_i19.TVSeries>>(
              this,
              Invocation.method(
                #getPopularTVSeries,
                [],
              ),
            )),
          ) as _i10.Future<_i2.Either<_i11.Failure, List<_i19.TVSeries>>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i19.TVSeries>>>
      getTopRatedTVSeries() => (super.noSuchMethod(
            Invocation.method(
              #getTopRatedTVSeries,
              [],
            ),
            returnValue: _i10
                .Future<_i2.Either<_i11.Failure, List<_i19.TVSeries>>>.value(
                _FakeEither_0<_i11.Failure, List<_i19.TVSeries>>(
              this,
              Invocation.method(
                #getTopRatedTVSeries,
                [],
              ),
            )),
          ) as _i10.Future<_i2.Either<_i11.Failure, List<_i19.TVSeries>>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, _i20.TVSeriesDetail>> getTVSeriesDetail(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTVSeriesDetail,
          [id],
        ),
        returnValue:
            _i10.Future<_i2.Either<_i11.Failure, _i20.TVSeriesDetail>>.value(
                _FakeEither_0<_i11.Failure, _i20.TVSeriesDetail>(
          this,
          Invocation.method(
            #getTVSeriesDetail,
            [id],
          ),
        )),
      ) as _i10.Future<_i2.Either<_i11.Failure, _i20.TVSeriesDetail>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i19.TVSeries>>>
      getTVSeriesRecommendations(int? id) => (super.noSuchMethod(
            Invocation.method(
              #getTVSeriesRecommendations,
              [id],
            ),
            returnValue: _i10
                .Future<_i2.Either<_i11.Failure, List<_i19.TVSeries>>>.value(
                _FakeEither_0<_i11.Failure, List<_i19.TVSeries>>(
              this,
              Invocation.method(
                #getTVSeriesRecommendations,
                [id],
              ),
            )),
          ) as _i10.Future<_i2.Either<_i11.Failure, List<_i19.TVSeries>>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i19.TVSeries>>> searchTVSeries(
          String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchTVSeries,
          [query],
        ),
        returnValue:
            _i10.Future<_i2.Either<_i11.Failure, List<_i19.TVSeries>>>.value(
                _FakeEither_0<_i11.Failure, List<_i19.TVSeries>>(
          this,
          Invocation.method(
            #searchTVSeries,
            [query],
          ),
        )),
      ) as _i10.Future<_i2.Either<_i11.Failure, List<_i19.TVSeries>>>);
}

/// A class which mocks [TVSeriesRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTVSeriesRemoteDataSource extends _i1.Mock
    implements _i21.TVSeriesRemoteDataSource {
  MockTVSeriesRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<List<_i22.TVSeriesModel>> getAiringTodayTVSeries() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAiringTodayTVSeries,
          [],
        ),
        returnValue:
            _i10.Future<List<_i22.TVSeriesModel>>.value(<_i22.TVSeriesModel>[]),
      ) as _i10.Future<List<_i22.TVSeriesModel>>);

  @override
  _i10.Future<List<_i22.TVSeriesModel>> getPopularTVSeries() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularTVSeries,
          [],
        ),
        returnValue:
            _i10.Future<List<_i22.TVSeriesModel>>.value(<_i22.TVSeriesModel>[]),
      ) as _i10.Future<List<_i22.TVSeriesModel>>);

  @override
  _i10.Future<List<_i22.TVSeriesModel>> getTopRatedTVSeries() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopRatedTVSeries,
          [],
        ),
        returnValue:
            _i10.Future<List<_i22.TVSeriesModel>>.value(<_i22.TVSeriesModel>[]),
      ) as _i10.Future<List<_i22.TVSeriesModel>>);

  @override
  _i10.Future<_i4.TvSeriesDetailResponse> getTVSeriesDetail(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTVSeriesDetail,
          [id],
        ),
        returnValue: _i10.Future<_i4.TvSeriesDetailResponse>.value(
            _FakeTvSeriesDetailResponse_2(
          this,
          Invocation.method(
            #getTVSeriesDetail,
            [id],
          ),
        )),
      ) as _i10.Future<_i4.TvSeriesDetailResponse>);

  @override
  _i10.Future<List<_i22.TVSeriesModel>> getTVSeriesRecommendations(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTVSeriesRecommendations,
          [id],
        ),
        returnValue:
            _i10.Future<List<_i22.TVSeriesModel>>.value(<_i22.TVSeriesModel>[]),
      ) as _i10.Future<List<_i22.TVSeriesModel>>);

  @override
  _i10.Future<List<_i22.TVSeriesModel>> searchTVSeries(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchTVSeries,
          [query],
        ),
        returnValue:
            _i10.Future<List<_i22.TVSeriesModel>>.value(<_i22.TVSeriesModel>[]),
      ) as _i10.Future<List<_i22.TVSeriesModel>>);
}

/// A class which mocks [WatchlistRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockWatchlistRepository extends _i1.Mock
    implements _i23.WatchlistRepository {
  MockWatchlistRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<_i2.Either<_i11.Failure, String>> saveWatchlistMovie(
          _i13.MovieDetail? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveWatchlistMovie,
          [movie],
        ),
        returnValue: _i10.Future<_i2.Either<_i11.Failure, String>>.value(
            _FakeEither_0<_i11.Failure, String>(
          this,
          Invocation.method(
            #saveWatchlistMovie,
            [movie],
          ),
        )),
      ) as _i10.Future<_i2.Either<_i11.Failure, String>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, String>> saveWatchlistTVSeries(
          _i20.TVSeriesDetail? tvSeries) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveWatchlistTVSeries,
          [tvSeries],
        ),
        returnValue: _i10.Future<_i2.Either<_i11.Failure, String>>.value(
            _FakeEither_0<_i11.Failure, String>(
          this,
          Invocation.method(
            #saveWatchlistTVSeries,
            [tvSeries],
          ),
        )),
      ) as _i10.Future<_i2.Either<_i11.Failure, String>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, String>> removeWatchlist(
    int? id,
    _i18.WatchCategory? category,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [
            id,
            category,
          ],
        ),
        returnValue: _i10.Future<_i2.Either<_i11.Failure, String>>.value(
            _FakeEither_0<_i11.Failure, String>(
          this,
          Invocation.method(
            #removeWatchlist,
            [
              id,
              category,
            ],
          ),
        )),
      ) as _i10.Future<_i2.Either<_i11.Failure, String>>);

  @override
  _i10.Future<bool> isAddedToWatchlist(
    int? id,
    _i18.WatchCategory? category,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #isAddedToWatchlist,
          [
            id,
            category,
          ],
        ),
        returnValue: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i12.Movie>>>
      getWatchlistMovies() => (super.noSuchMethod(
            Invocation.method(
              #getWatchlistMovies,
              [],
            ),
            returnValue:
                _i10.Future<_i2.Either<_i11.Failure, List<_i12.Movie>>>.value(
                    _FakeEither_0<_i11.Failure, List<_i12.Movie>>(
              this,
              Invocation.method(
                #getWatchlistMovies,
                [],
              ),
            )),
          ) as _i10.Future<_i2.Either<_i11.Failure, List<_i12.Movie>>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i19.TVSeries>>>
      getWatchlistTVSeries() => (super.noSuchMethod(
            Invocation.method(
              #getWatchlistTVSeries,
              [],
            ),
            returnValue: _i10
                .Future<_i2.Either<_i11.Failure, List<_i19.TVSeries>>>.value(
                _FakeEither_0<_i11.Failure, List<_i19.TVSeries>>(
              this,
              Invocation.method(
                #getWatchlistTVSeries,
                [],
              ),
            )),
          ) as _i10.Future<_i2.Either<_i11.Failure, List<_i19.TVSeries>>>);
}

/// A class which mocks [WatchlistLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockWatchlistLocalDataSource extends _i1.Mock
    implements _i24.WatchlistLocalDataSource {
  MockWatchlistLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<String> insertWatchlist(
    _i25.WatchlistTable? watchlis,
    _i18.WatchCategory? category,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWatchlist,
          [
            watchlis,
            category,
          ],
        ),
        returnValue: _i10.Future<String>.value(_i26.dummyValue<String>(
          this,
          Invocation.method(
            #insertWatchlist,
            [
              watchlis,
              category,
            ],
          ),
        )),
      ) as _i10.Future<String>);

  @override
  _i10.Future<String> removeWatchlist(
    int? id,
    _i18.WatchCategory? category,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [
            id,
            category,
          ],
        ),
        returnValue: _i10.Future<String>.value(_i26.dummyValue<String>(
          this,
          Invocation.method(
            #removeWatchlist,
            [
              id,
              category,
            ],
          ),
        )),
      ) as _i10.Future<String>);

  @override
  _i10.Future<_i25.WatchlistTable?> getWatchlistById(
    int? id,
    _i18.WatchCategory? category,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistById,
          [
            id,
            category,
          ],
        ),
        returnValue: _i10.Future<_i25.WatchlistTable?>.value(),
      ) as _i10.Future<_i25.WatchlistTable?>);

  @override
  _i10.Future<List<_i25.WatchlistTable>> getWatchlist(
          _i18.WatchCategory? category) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlist,
          [category],
        ),
        returnValue: _i10.Future<List<_i25.WatchlistTable>>.value(
            <_i25.WatchlistTable>[]),
      ) as _i10.Future<List<_i25.WatchlistTable>>);
}

/// A class which mocks [GetNowPlayingMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetNowPlayingMovies extends _i1.Mock
    implements _i27.GetNowPlayingMovies {
  MockGetNowPlayingMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.MovieRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMovieRepository_3(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i5.MovieRepository);

  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i12.Movie>>> execute() =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
        ),
        returnValue:
            _i10.Future<_i2.Either<_i11.Failure, List<_i12.Movie>>>.value(
                _FakeEither_0<_i11.Failure, List<_i12.Movie>>(
          this,
          Invocation.method(
            #execute,
            [],
          ),
        )),
      ) as _i10.Future<_i2.Either<_i11.Failure, List<_i12.Movie>>>);
}

/// A class which mocks [GetPopularMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPopularMovies extends _i1.Mock implements _i28.GetPopularMovies {
  MockGetPopularMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.MovieRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMovieRepository_3(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i5.MovieRepository);

  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i12.Movie>>> execute() =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
        ),
        returnValue:
            _i10.Future<_i2.Either<_i11.Failure, List<_i12.Movie>>>.value(
                _FakeEither_0<_i11.Failure, List<_i12.Movie>>(
          this,
          Invocation.method(
            #execute,
            [],
          ),
        )),
      ) as _i10.Future<_i2.Either<_i11.Failure, List<_i12.Movie>>>);
}

/// A class which mocks [GetTopRatedMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTopRatedMovies extends _i1.Mock implements _i29.GetTopRatedMovies {
  MockGetTopRatedMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.MovieRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMovieRepository_3(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i5.MovieRepository);

  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i12.Movie>>> execute() =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
        ),
        returnValue:
            _i10.Future<_i2.Either<_i11.Failure, List<_i12.Movie>>>.value(
                _FakeEither_0<_i11.Failure, List<_i12.Movie>>(
          this,
          Invocation.method(
            #execute,
            [],
          ),
        )),
      ) as _i10.Future<_i2.Either<_i11.Failure, List<_i12.Movie>>>);
}

/// A class which mocks [SearchMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockSearchMovies extends _i1.Mock implements _i30.SearchMovies {
  MockSearchMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.MovieRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMovieRepository_3(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i5.MovieRepository);

  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i12.Movie>>> execute(
          String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [query],
        ),
        returnValue:
            _i10.Future<_i2.Either<_i11.Failure, List<_i12.Movie>>>.value(
                _FakeEither_0<_i11.Failure, List<_i12.Movie>>(
          this,
          Invocation.method(
            #execute,
            [query],
          ),
        )),
      ) as _i10.Future<_i2.Either<_i11.Failure, List<_i12.Movie>>>);
}

/// A class which mocks [GetMovieDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetMovieDetail extends _i1.Mock implements _i31.GetMovieDetail {
  MockGetMovieDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.MovieRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMovieRepository_3(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i5.MovieRepository);

  @override
  _i10.Future<_i2.Either<_i11.Failure, _i13.MovieDetail>> execute(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [id],
        ),
        returnValue:
            _i10.Future<_i2.Either<_i11.Failure, _i13.MovieDetail>>.value(
                _FakeEither_0<_i11.Failure, _i13.MovieDetail>(
          this,
          Invocation.method(
            #execute,
            [id],
          ),
        )),
      ) as _i10.Future<_i2.Either<_i11.Failure, _i13.MovieDetail>>);
}

/// A class which mocks [GetAiringTodayTVSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAiringTodayTVSeries extends _i1.Mock
    implements _i32.GetAiringTodayTVSeries {
  MockGetAiringTodayTVSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.TVSeriesRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTVSeriesRepository_4(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i6.TVSeriesRepository);

  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i19.TVSeries>>> execute() =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
        ),
        returnValue:
            _i10.Future<_i2.Either<_i11.Failure, List<_i19.TVSeries>>>.value(
                _FakeEither_0<_i11.Failure, List<_i19.TVSeries>>(
          this,
          Invocation.method(
            #execute,
            [],
          ),
        )),
      ) as _i10.Future<_i2.Either<_i11.Failure, List<_i19.TVSeries>>>);
}

/// A class which mocks [GetPopularTVSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPopularTVSeries extends _i1.Mock
    implements _i33.GetPopularTVSeries {
  MockGetPopularTVSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.TVSeriesRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTVSeriesRepository_4(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i6.TVSeriesRepository);

  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i19.TVSeries>>> execute() =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
        ),
        returnValue:
            _i10.Future<_i2.Either<_i11.Failure, List<_i19.TVSeries>>>.value(
                _FakeEither_0<_i11.Failure, List<_i19.TVSeries>>(
          this,
          Invocation.method(
            #execute,
            [],
          ),
        )),
      ) as _i10.Future<_i2.Either<_i11.Failure, List<_i19.TVSeries>>>);
}

/// A class which mocks [GetTopRatedTVSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTopRatedTVSeries extends _i1.Mock
    implements _i34.GetTopRatedTVSeries {
  MockGetTopRatedTVSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.TVSeriesRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTVSeriesRepository_4(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i6.TVSeriesRepository);

  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i19.TVSeries>>> execute() =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
        ),
        returnValue:
            _i10.Future<_i2.Either<_i11.Failure, List<_i19.TVSeries>>>.value(
                _FakeEither_0<_i11.Failure, List<_i19.TVSeries>>(
          this,
          Invocation.method(
            #execute,
            [],
          ),
        )),
      ) as _i10.Future<_i2.Either<_i11.Failure, List<_i19.TVSeries>>>);
}

/// A class which mocks [SearchTVSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockSearchTVSeries extends _i1.Mock implements _i35.SearchTVSeries {
  MockSearchTVSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.TVSeriesRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTVSeriesRepository_4(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i6.TVSeriesRepository);

  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i19.TVSeries>>> execute(
          String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [query],
        ),
        returnValue:
            _i10.Future<_i2.Either<_i11.Failure, List<_i19.TVSeries>>>.value(
                _FakeEither_0<_i11.Failure, List<_i19.TVSeries>>(
          this,
          Invocation.method(
            #execute,
            [query],
          ),
        )),
      ) as _i10.Future<_i2.Either<_i11.Failure, List<_i19.TVSeries>>>);
}

/// A class which mocks [GetTVSeriesDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTVSeriesDetail extends _i1.Mock implements _i36.GetTVSeriesDetail {
  MockGetTVSeriesDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.TVSeriesRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTVSeriesRepository_4(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i6.TVSeriesRepository);

  @override
  _i10.Future<_i2.Either<_i11.Failure, _i20.TVSeriesDetail>> execute(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [id],
        ),
        returnValue:
            _i10.Future<_i2.Either<_i11.Failure, _i20.TVSeriesDetail>>.value(
                _FakeEither_0<_i11.Failure, _i20.TVSeriesDetail>(
          this,
          Invocation.method(
            #execute,
            [id],
          ),
        )),
      ) as _i10.Future<_i2.Either<_i11.Failure, _i20.TVSeriesDetail>>);
}

/// A class which mocks [HttpClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i7.HttpClient {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Duration get idleTimeout => (super.noSuchMethod(
        Invocation.getter(#idleTimeout),
        returnValue: _FakeDuration_5(
          this,
          Invocation.getter(#idleTimeout),
        ),
      ) as Duration);

  @override
  set idleTimeout(Duration? _idleTimeout) => super.noSuchMethod(
        Invocation.setter(
          #idleTimeout,
          _idleTimeout,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set connectionTimeout(Duration? _connectionTimeout) => super.noSuchMethod(
        Invocation.setter(
          #connectionTimeout,
          _connectionTimeout,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set maxConnectionsPerHost(int? _maxConnectionsPerHost) => super.noSuchMethod(
        Invocation.setter(
          #maxConnectionsPerHost,
          _maxConnectionsPerHost,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get autoUncompress => (super.noSuchMethod(
        Invocation.getter(#autoUncompress),
        returnValue: false,
      ) as bool);

  @override
  set autoUncompress(bool? _autoUncompress) => super.noSuchMethod(
        Invocation.setter(
          #autoUncompress,
          _autoUncompress,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set userAgent(String? _userAgent) => super.noSuchMethod(
        Invocation.setter(
          #userAgent,
          _userAgent,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set authenticate(
          _i10.Future<bool> Function(
            Uri,
            String,
            String?,
          )? f) =>
      super.noSuchMethod(
        Invocation.setter(
          #authenticate,
          f,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set connectionFactory(
          _i10.Future<_i7.ConnectionTask<_i7.Socket>> Function(
            Uri,
            String?,
            int?,
          )? f) =>
      super.noSuchMethod(
        Invocation.setter(
          #connectionFactory,
          f,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set findProxy(String Function(Uri)? f) => super.noSuchMethod(
        Invocation.setter(
          #findProxy,
          f,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set authenticateProxy(
          _i10.Future<bool> Function(
            String,
            int,
            String,
            String?,
          )? f) =>
      super.noSuchMethod(
        Invocation.setter(
          #authenticateProxy,
          f,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set badCertificateCallback(
          bool Function(
            _i7.X509Certificate,
            String,
            int,
          )? callback) =>
      super.noSuchMethod(
        Invocation.setter(
          #badCertificateCallback,
          callback,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set keyLog(dynamic Function(String)? callback) => super.noSuchMethod(
        Invocation.setter(
          #keyLog,
          callback,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i10.Future<_i7.HttpClientRequest> open(
    String? method,
    String? host,
    int? port,
    String? path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #open,
          [
            method,
            host,
            port,
            path,
          ],
        ),
        returnValue:
            _i10.Future<_i7.HttpClientRequest>.value(_FakeHttpClientRequest_6(
          this,
          Invocation.method(
            #open,
            [
              method,
              host,
              port,
              path,
            ],
          ),
        )),
      ) as _i10.Future<_i7.HttpClientRequest>);

  @override
  _i10.Future<_i7.HttpClientRequest> openUrl(
    String? method,
    Uri? url,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #openUrl,
          [
            method,
            url,
          ],
        ),
        returnValue:
            _i10.Future<_i7.HttpClientRequest>.value(_FakeHttpClientRequest_6(
          this,
          Invocation.method(
            #openUrl,
            [
              method,
              url,
            ],
          ),
        )),
      ) as _i10.Future<_i7.HttpClientRequest>);

  @override
  _i10.Future<_i7.HttpClientRequest> get(
    String? host,
    int? port,
    String? path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [
            host,
            port,
            path,
          ],
        ),
        returnValue:
            _i10.Future<_i7.HttpClientRequest>.value(_FakeHttpClientRequest_6(
          this,
          Invocation.method(
            #get,
            [
              host,
              port,
              path,
            ],
          ),
        )),
      ) as _i10.Future<_i7.HttpClientRequest>);

  @override
  _i10.Future<_i7.HttpClientRequest> getUrl(Uri? url) => (super.noSuchMethod(
        Invocation.method(
          #getUrl,
          [url],
        ),
        returnValue:
            _i10.Future<_i7.HttpClientRequest>.value(_FakeHttpClientRequest_6(
          this,
          Invocation.method(
            #getUrl,
            [url],
          ),
        )),
      ) as _i10.Future<_i7.HttpClientRequest>);

  @override
  _i10.Future<_i7.HttpClientRequest> post(
    String? host,
    int? port,
    String? path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [
            host,
            port,
            path,
          ],
        ),
        returnValue:
            _i10.Future<_i7.HttpClientRequest>.value(_FakeHttpClientRequest_6(
          this,
          Invocation.method(
            #post,
            [
              host,
              port,
              path,
            ],
          ),
        )),
      ) as _i10.Future<_i7.HttpClientRequest>);

  @override
  _i10.Future<_i7.HttpClientRequest> postUrl(Uri? url) => (super.noSuchMethod(
        Invocation.method(
          #postUrl,
          [url],
        ),
        returnValue:
            _i10.Future<_i7.HttpClientRequest>.value(_FakeHttpClientRequest_6(
          this,
          Invocation.method(
            #postUrl,
            [url],
          ),
        )),
      ) as _i10.Future<_i7.HttpClientRequest>);

  @override
  _i10.Future<_i7.HttpClientRequest> put(
    String? host,
    int? port,
    String? path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [
            host,
            port,
            path,
          ],
        ),
        returnValue:
            _i10.Future<_i7.HttpClientRequest>.value(_FakeHttpClientRequest_6(
          this,
          Invocation.method(
            #put,
            [
              host,
              port,
              path,
            ],
          ),
        )),
      ) as _i10.Future<_i7.HttpClientRequest>);

  @override
  _i10.Future<_i7.HttpClientRequest> putUrl(Uri? url) => (super.noSuchMethod(
        Invocation.method(
          #putUrl,
          [url],
        ),
        returnValue:
            _i10.Future<_i7.HttpClientRequest>.value(_FakeHttpClientRequest_6(
          this,
          Invocation.method(
            #putUrl,
            [url],
          ),
        )),
      ) as _i10.Future<_i7.HttpClientRequest>);

  @override
  _i10.Future<_i7.HttpClientRequest> delete(
    String? host,
    int? port,
    String? path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [
            host,
            port,
            path,
          ],
        ),
        returnValue:
            _i10.Future<_i7.HttpClientRequest>.value(_FakeHttpClientRequest_6(
          this,
          Invocation.method(
            #delete,
            [
              host,
              port,
              path,
            ],
          ),
        )),
      ) as _i10.Future<_i7.HttpClientRequest>);

  @override
  _i10.Future<_i7.HttpClientRequest> deleteUrl(Uri? url) => (super.noSuchMethod(
        Invocation.method(
          #deleteUrl,
          [url],
        ),
        returnValue:
            _i10.Future<_i7.HttpClientRequest>.value(_FakeHttpClientRequest_6(
          this,
          Invocation.method(
            #deleteUrl,
            [url],
          ),
        )),
      ) as _i10.Future<_i7.HttpClientRequest>);

  @override
  _i10.Future<_i7.HttpClientRequest> patch(
    String? host,
    int? port,
    String? path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [
            host,
            port,
            path,
          ],
        ),
        returnValue:
            _i10.Future<_i7.HttpClientRequest>.value(_FakeHttpClientRequest_6(
          this,
          Invocation.method(
            #patch,
            [
              host,
              port,
              path,
            ],
          ),
        )),
      ) as _i10.Future<_i7.HttpClientRequest>);

  @override
  _i10.Future<_i7.HttpClientRequest> patchUrl(Uri? url) => (super.noSuchMethod(
        Invocation.method(
          #patchUrl,
          [url],
        ),
        returnValue:
            _i10.Future<_i7.HttpClientRequest>.value(_FakeHttpClientRequest_6(
          this,
          Invocation.method(
            #patchUrl,
            [url],
          ),
        )),
      ) as _i10.Future<_i7.HttpClientRequest>);

  @override
  _i10.Future<_i7.HttpClientRequest> head(
    String? host,
    int? port,
    String? path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [
            host,
            port,
            path,
          ],
        ),
        returnValue:
            _i10.Future<_i7.HttpClientRequest>.value(_FakeHttpClientRequest_6(
          this,
          Invocation.method(
            #head,
            [
              host,
              port,
              path,
            ],
          ),
        )),
      ) as _i10.Future<_i7.HttpClientRequest>);

  @override
  _i10.Future<_i7.HttpClientRequest> headUrl(Uri? url) => (super.noSuchMethod(
        Invocation.method(
          #headUrl,
          [url],
        ),
        returnValue:
            _i10.Future<_i7.HttpClientRequest>.value(_FakeHttpClientRequest_6(
          this,
          Invocation.method(
            #headUrl,
            [url],
          ),
        )),
      ) as _i10.Future<_i7.HttpClientRequest>);

  @override
  void addCredentials(
    Uri? url,
    String? realm,
    _i7.HttpClientCredentials? credentials,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #addCredentials,
          [
            url,
            realm,
            credentials,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addProxyCredentials(
    String? host,
    int? port,
    String? realm,
    _i7.HttpClientCredentials? credentials,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #addProxyCredentials,
          [
            host,
            port,
            realm,
            credentials,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void close({bool? force = false}) => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
          {#force: force},
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [IOClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockIOClient extends _i1.Mock implements _i8.IOClient {
  MockIOClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<_i8.IOStreamedResponse> send(_i37.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i10.Future<_i8.IOStreamedResponse>.value(_FakeIOStreamedResponse_7(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i10.Future<_i8.IOStreamedResponse>);

  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i10.Future<_i9.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i10.Future<_i9.Response>.value(_FakeResponse_8(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i10.Future<_i9.Response>);

  @override
  _i10.Future<_i9.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i10.Future<_i9.Response>.value(_FakeResponse_8(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i10.Future<_i9.Response>);

  @override
  _i10.Future<_i9.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i38.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i10.Future<_i9.Response>.value(_FakeResponse_8(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i10.Future<_i9.Response>);

  @override
  _i10.Future<_i9.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i38.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i10.Future<_i9.Response>.value(_FakeResponse_8(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i10.Future<_i9.Response>);

  @override
  _i10.Future<_i9.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i38.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i10.Future<_i9.Response>.value(_FakeResponse_8(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i10.Future<_i9.Response>);

  @override
  _i10.Future<_i9.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i38.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i10.Future<_i9.Response>.value(_FakeResponse_8(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i10.Future<_i9.Response>);

  @override
  _i10.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i10.Future<String>.value(_i26.dummyValue<String>(
          this,
          Invocation.method(
            #read,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i10.Future<String>);

  @override
  _i10.Future<_i39.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i10.Future<_i39.Uint8List>.value(_i39.Uint8List(0)),
      ) as _i10.Future<_i39.Uint8List>);
}
